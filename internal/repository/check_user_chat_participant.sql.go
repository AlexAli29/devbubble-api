// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: check_user_chat_participant.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const isUserChatParticipant = `-- name: IsUserChatParticipant :one
SELECT 
    EXISTS (
        SELECT 1 
        FROM "chat_participants" 
        WHERE "chatId" = $1 AND "userId" = $2
    ) AS "is_participant"
`

type IsUserChatParticipantParams struct {
	ChatId pgtype.UUID `json:"chatId"`
	UserId pgtype.UUID `json:"userId"`
}

func (q *Queries) IsUserChatParticipant(ctx context.Context, arg IsUserChatParticipantParams) (bool, error) {
	row := q.db.QueryRow(ctx, isUserChatParticipant, arg.ChatId, arg.UserId)
	var is_participant bool
	err := row.Scan(&is_participant)
	return is_participant, err
}
