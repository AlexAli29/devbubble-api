// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: get_avavliable_tags.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getAvailableTags = `-- name: GetAvailableTags :many
SELECT ut.id, ut.text, ut.icon
FROM user_tags ut
WHERE NOT EXISTS (
    SELECT 1
    FROM user_user_tags uut
    WHERE uut."userTagId" = ut.id
    AND uut."userId" = $1
)
`

func (q *Queries) GetAvailableTags(ctx context.Context, userid pgtype.UUID) ([]UserTag, error) {
	rows, err := q.db.Query(ctx, getAvailableTags, userid)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []UserTag
	for rows.Next() {
		var i UserTag
		if err := rows.Scan(&i.ID, &i.Text, &i.Icon); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
