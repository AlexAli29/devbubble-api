// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: check_auth_code.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const checkAuthCode = `-- name: CheckAuthCode :one
WITH matched_user AS (
    SELECT auth_codes.user_id
    FROM auth_codes
    JOIN users ON auth_codes.user_id = users.id
    WHERE users.email = $1
      AND users.is_verified=true
      AND auth_codes.code = $2
      AND auth_codes.updated_at > (CURRENT_TIMESTAMP - INTERVAL '10 MINUTES')
    LIMIT 1
),
updated AS (
    UPDATE auth_codes
    SET code = floor(random() * 900000 + 100000) -- Generates a new code        
    WHERE user_id IN (SELECT user_id FROM matched_user)
    RETURNING user_id
)
SELECT user_id FROM updated
`

type CheckAuthCodeParams struct {
	Email string
	Code  int32
}

func (q *Queries) CheckAuthCode(ctx context.Context, arg CheckAuthCodeParams) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, checkAuthCode, arg.Email, arg.Code)
	var user_id pgtype.UUID
	err := row.Scan(&user_id)
	return user_id, err
}
